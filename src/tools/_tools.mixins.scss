//------------------------------------
// #MIXINS
//------------------------------------

// Generate `:hover` and `:focus` styles in one go. Optionally pass in classes
// (e.g. `.is-current`) to apply the same styles to.
//
// .simple-uage {
//   @include hocus() {
//     text-decoration: underline;
//   }
// }
//
// .detailed-uage {
//   @include hocus('.is-current') {
//     text-decoration: underline;
//   }
// }
@mixin hocus($selector: null) {
    @if ($selector != null) {
        $selector: '&' + $selector + ',';
    }

    #{$selector} &:hover,
    &:focus {
        @content;
    }
}

// Mixin to add placeholder text colour on inputs
// Source: https://css-tricks.com/snippets/css/style-placeholder-text/
//
// .simple-uage {
//   @include placeholder-color(#fff);
// }
//
@mixin placeholder-color($color) {
    &::-webkit-input-placeholder {
        color: $color;
    }

    &:-moz-placeholder {
        // Firefox 18-
        color: $color;
    }

    &::-moz-placeholder {
        // Firefox 19+
        color: $color;
        opacity: 1; // Firefox applies opacity to placeholders
    }

    &:-ms-input-placeholder {
        // IE 10+
        color: $color !important;
    }

    &::-ms-input-placeholder {
        // Edge
        color: $color;
    }

    &::placeholder {
        // Standard, Firefox 51+
        color: $color;
    }
}

// Mixin to calculate width based on given width & columns, allows widths to be
// calculated and used in rare cases without classes.
//
// See _trumps.widths.scss for preferred class based usage.
//
// .simple-usage {
//   @include width(2, 12);
// }
//
@mixin width($width, $columns) {
    // sass-lint:disable no-important
    width: ($width / $columns) * 100% !important;
}

// Visually hidden mixin for application to elements which should be hidden, yet accessible for screen readers
@mixin visually-hidden() {
    border: 0;
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
    white-space: nowrap;
}
